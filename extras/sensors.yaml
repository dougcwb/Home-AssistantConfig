#  ____  ____ ___   __  __  ___  _   _ ___ _____ ___  ____
# |  _ \|  _ \_ _| |  \/  |/ _ \| \ | |_ _|_   _/ _ \|  _ \
# | |_) | |_) | |  | |\/| | | | |  \| || |  | || | | | |_) |
# |  _ <|  __/| |  | |  | | |_| | |\  || |  | || |_| |  _ <
# |_| \_\_|  |___| |_|  |_|\___/|_| \_|___| |_| \___/|_| \_\
#
# Temperatura do Raspberry Pi
  - platform: command_line
    name: CPU Temp
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: command_line
    name: HD Temperature
    command: "sudo hddtemp -n /dev/sda"
    unit_of_measurement: "°C"
# Monitor de sistema
  - platform: systemmonitor
    resources:
      - type: disk_free
        arg: /home
      - type: disk_use
        arg: /home
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: memory_free
      - type: processor_use
      - type: swap_use_percent
      - type: last_boot
      - type: throughput_network_in
        arg: eth0
      - type: throughput_network_out
        arg: eth0
      - type: network_in
        arg: 'Local Area Connection'
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0
      - type: ipv4_address
        arg: eth0
      - type: packets_in
        arg: eth0
      - type: packets_out
        arg: eth0
  - platform: command_line
    name: HA Start
    #icon: mdi:lastpass
    command: grep -m1 'Home Assistant initialized' home-assistant.log | awk '{ print $6, $7, $8, $9, $10 }'
  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: HA release
  - platform: command_line
    name: badlogin
    command: "grep -c 'Login attempt' /home/hass/.homeassistant/home-assistant.log"
  - platform: uptime
    name: Tempo Online
    unit_of_measurement: hours
  - platform: moon
  - platform: websocket_api
  - platform: derivative
    source: sensor.potencia
    name: Potencia por Hora
    round: 1
    unit_time: h # the resulting "unit_of_measurement" will be °C/h if the sensor.temperate has set °C as it's unit
    time_window: "00:30:00"  # we look at the change over the last half hour
# ____   ___  _        _    ____
#|  _ \ / _ \| |      / \  |  _ \
#| | | | | | | |     / _ \ | |_) |
#| |_| | |_| | |___ / ___ \|  _ <
#|____/ \___/|_____/_/   \_\_| \_\
#
  - platform: alpha_vantage
    api_key: !secret alpha_api
    symbols:
      - symbol: GOOGL
        name: Google
    foreign_exchange:
      - name: Dolar
        from: USD
        to: BRL

# _____ _____ __  __ ____  _____ ____      _  _____ _   _ ____      _
#|_   _| ____|  \/  |  _ \| ____|  _ \    / \|_   _| | | |  _ \    / \
#  | | |  _| | |\/| | |_) |  _| | |_) |  / _ \ | | | | | | |_) |  / _ \
#  | | | |___| |  | |  __/| |___|  _ <  / ___ \| | | |_| |  _ <  / ___ \
#  |_| |_____|_|  |_|_|   |_____|_| \_\/_/   \_\_|  \___/|_| \_\/_/   \_\
#
  - platform: darksky
    api_key: !secret darksky_key
    name: Clima
    monitored_conditions:
      - temperature
      - humidity
    scan_interval:
      # At least one of these must be specified:
      days: 0
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - platform: mitemp_bt
    mac: 'A4:C1:38:0F:0F:56'
    name: Sensor Sala
    force_update: true
    median: 1
    monitored_conditions:
      - temperature
      - humidity
      - battery
#  _____ _____ __  __ ____  _        _  _____ _____ ____
# |_   _| ____|  \/  |  _ \| |      / \|_   _| ____/ ___|
#   | | |  _| | |\/| | |_) | |     / _ \ | | |  _| \___ \
#   | | | |___| |  | |  __/| |___ / ___ \| | | |___ ___) |
#   |_| |_____|_|  |_|_|   |_____/_/   \_\_| |_____|____/
# 

  - platform: template
    sensors:
#  ____   _____        __  ____  ____
# |  _ \ / _ \ \      / / |  _ \|___ \
# | |_) | | | \ \ /\ / /  | |_) | __) |
# |  __/| |_| |\ V  V /   |  _ < / __/
# |_|    \___/  \_/\_/    |_| \_\_____|
      
      today_consumption:
        friendly_name: Consumo Hj
        unit_of_measurement: kWh
        value_template: "{{ state_attr('switch.pow_geladeira', 'consumption').0 }}"
        icon_template: mdi:fridge-alert
      ten_days_consumption:
        friendly_name: Consumo 10 dias
        unit_of_measurement: kWh
        icon_template: mdi:fridge-off
        value_template: "{% set p=state_attr('switch.pow_geladeira', 'consumption') %}{{ p[:10]|sum|round(2) if p}}"
      trinta_days_consumption:
        friendly_name: Consumo 30 dias
        unit_of_measurement: kWh
        icon_template: mdi:fridge-off
        value_template: "{% set p=state_attr('switch.pow_geladeira', 'consumption') %}{{ p[:30]|sum|round(2) if p}}"
#  _     ___   ____    _    _     ___ _____   _    ____    _    ___
# | |   / _ \ / ___|  / \  | |   |_ _|__  /  / \  / ___|  / \  / _ \
# | |  | | | | |     / _ \ | |    | |  / /  / _ \| |     / _ \| | | |
# | |__| |_| | |___ / ___ \| |___ | | / /_ / ___ \ |___ / ___ \ |_| |
# |_____\___/ \____/_/   \_\_____|___/____/_/   \_\____/_/   \_\___/
      donos_em_casa:
        friendly_name: "Donos em casa"
        value_template: >-
           {% if is_state('group.all_devices', 'not_home') %}
             off
           {% elif is_state('group.all_devices', 'unknown') %}
             off
           {% else %}
             on
           {% endif %}
        icon_template: >-
          {% if is_state('group.all_devices', 'not_home') %}
            mdi:thumb-down-outline
          {% elif is_state('group.all_devices', 'unknown') %}
            mdi:thumb-down-outline
          {% else %}
            mdi:thumb-up-outline
          {% endif %}
        entity_id: group.all_devices
#  ____    _  _____  _    ____    _    ____  _____
# |  _ \  / \|_   _|/ \  | __ )  / \  / ___|| ____|
# | | | |/ _ \ | | / _ \ |  _ \ / _ \ \___ \|  _|
# | |_| / ___ \| |/ ___ \| |_) / ___ \ ___) | |___
# |____/_/   \_\_/_/   \_\____/_/   \_\____/|_____|
  - platform: sql
    db_url: !secret dburl
    queries:
      - name: DB size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 /1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB
#  _   _ ___ ____ _____ ___  ____  ___ ____ ___  ____
# | | | |_ _/ ___|_   _/ _ \|  _ \|_ _/ ___/ _ \/ ___|
# | |_| || |\___ \ | || | | | |_) || | |  | | | \___ \
# |  _  || | ___) || || |_| |  _ < | | |__| |_| |___) |
# |_| |_|___|____/ |_| \___/|_| \_\___\____\___/|____/

# Históricos e estatísticas da TV
  - platform: history_stats
    name: TV Hoje
    entity_id: media_player.samsung_un40f5500
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: TV Ontem
    entity_id: media_player.samsung_un40f5500
    state: 'on'
    type: time
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
# Históricos e estatísticas do Portão
  - platform: history_stats
    name: Portao Hoje
    entity_id: binary_sensor.portao_aberto
    state: 'on'
    type: count
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Portao Ontem
    entity_id: binary_sensor.portao_aberto
    state: 'on'
    type: count
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
# Históricos e estatísticas da Porta da Geladeira
  - platform: history_stats
    name: Tempo Porta G Hoje
    entity_id: binary_sensor.porta_geladeira
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Tempo Porta G Ontem
    entity_id: binary_sensor.porta_geladeira
    state: 'on'
    type: time
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
  - platform: history_stats
    name: Num Porta G Hoje
    entity_id: binary_sensor.porta_geladeira
    state: 'on'
    type: count
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Num Porta G Ontem
    entity_id: binary_sensor.porta_geladeira
    state: 'on'
    type: count
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
# Históricos e estatísticas da Porta de vidro
  - platform: history_stats
    name: Tempo Porta V Hoje
    entity_id: binary_sensor.porta_vidro
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Tempo Porta V Ontem
    entity_id: binary_sensor.porta_vidro
    state: 'on'
    type: time
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
  - platform: history_stats
    name: Num Porta V Hoje
    entity_id: binary_sensor.porta_vidro
    state: 'on'
    type: count
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Num Porta V Ontem
    entity_id: binary_sensor.porta_vidro
    state: 'on'
    type: count
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
# Históricos e estatísticas do Sensor de presenca
  - platform: history_stats
    name: Presenca Hoje
    entity_id: binary_sensor.presenca
    state: 'on'
    type: count
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Presenca Ontem
    entity_id: binary_sensor.presenca
    state: 'on'
    type: count
    end: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24
    